    auto controller_state = joint_controller->getState();
    if (controller_state!=nullptr)
    {
      double* state_positions = robot_state.getVariablePositions();
      double new_joint_positions[robot::num_joints];

      for (int state_idx=0; state_idx<controller_state->joint_names.size(); state_idx++)
      {
        const std::string& joint_name = controller_state->joint_names[state_idx];

        int found_joint_idx=-1;
        for (int joint_idx=0; joint_idx<robot::num_joints; joint_idx++)
        {
          if (robot::joint_names[joint_idx] == joint_name)
          {
            found_joint_idx = joint_idx;
            break;
          }
        }
        if (found_joint_idx==-1) continue;

        new_joint_positions[state_idx] = state_positions[ robot::joint_idx_to_variable_idx[found_joint_idx] ];
      }
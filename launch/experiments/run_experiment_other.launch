<?xml version="1.0"?>
<launch>

  <!-- =================== PARAMETERS ========================== -->
  <arg name="robot_name" default="horti"/>
  <arg name="waypoints_file" default="test"/>
  <arg name="waypoints_file_other" default="test"/>
  <arg name="trajectory_file" default=""/>  <!-- empty to disable -->
  <arg name="endpoint_frame" default="head_link_eef"/>
  <arg name="endpoint_frame_other" default="other_link_eef"/>
  <arg name="solver" default="dawn_ik"/> <!-- values: dawn_ik or collision_ik or empty string to disable -->
  <arg name="world_frame" default="world"/>
  <arg name="start_sim" default="True"/>
  <arg name="wait_for_init" default="10.0"/>
  <arg name="wait_for_solver" default="10.0"/>
  <arg name="wait_for_shutdown" default="1.0"/>
  <!-- ========================================================= -->

  <!-- waypoint generator and logger -->
  <node name="run_experiment" pkg="dawn_ik" type="run_experiment.py" output="screen" required="false">
    <param name="waypoints_file" value="$(find dawn_ik)/waypoints/$(arg robot_name)/$(arg waypoints_file).txt"/>
    <param name="output_file" value="$(find dawn_ik)/results/$(arg robot_name)/$(arg solver)-$(arg waypoints_file)-$(arg trajectory_file)_multiple_head.json"/>
    <param name="wait_for_init" value="$(arg wait_for_init)"/>
    <param name="wait_for_solver" value="$(arg wait_for_solver)"/>
    <param name="wait_for_shutdown" value="$(arg wait_for_shutdown)"/>
    <param name="world_frame" value="$(arg world_frame)"/>
    <param name="endpoint_frame" value="$(arg endpoint_frame)"/>
    <param name="trigger_moveit_replay_trajectory" value="$(eval trajectory_file != '')"/>
  </node>

  <node name="run_experiment_other" pkg="dawn_ik" type="run_experiment.py" output="screen" required="false">
    <param name="waypoints_file" value="$(find dawn_ik)/waypoints/$(arg robot_name)/$(arg waypoints_file_other).txt"/>
    <param name="output_file" value="$(find dawn_ik)/results/$(arg robot_name)/$(arg solver)-$(arg waypoints_file)-$(arg trajectory_file)_multiple_other.json"/>
    <param name="wait_for_init" value="$(arg wait_for_init)"/>
    <param name="wait_for_solver" value="$(arg wait_for_solver)"/>
    <param name="wait_for_shutdown" value="$(arg wait_for_shutdown)"/>
    <param name="world_frame" value="$(arg world_frame)"/>
    <param name="endpoint_frame" value="$(arg endpoint_frame_other)"/>
    <param name="trigger_moveit_replay_trajectory" value="$(eval trajectory_file != '')"/>

    <remap from="/dawn_ik_solver/ik_goal" to="/dawn_ik_solver_other/ik_goal"/>
  </node>

  <!-- offline collision check service used by run_experiment.py -->
  <include file="$(find moveit_collision_check)/launch/start.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- fake simulator -->
  <include file="$(find dawn_ik)/launch/$(arg robot_name)_fake.launch" if="$(arg start_sim)"/>

  <!-- solver -->
  <include file="$(find dawn_ik)/launch/$(arg robot_name)_solver_other.launch" if="$(eval solver == 'dawn_ik')"/>
  <!--<include file="$(find dawn_ik)/launch/collision_ik/$(arg robot_name)_solver_collision_ik.launch" if="$(eval solver == 'collision_ik')"/>-->

  <!-- trajectory replay 
  <node name="moveit_replay_trajectory" pkg="dawn_ik" type="moveit_replay_trajectory.py" output="screen" if="$(eval trajectory_file != '')">
    <param name="bag_filename" value="$(find dawn_ik)/trajectories/$(arg robot_name)/$(arg trajectory_file).bag"/>
    <param name="num_repeats" value="1"/>
    <param name="wait_for_trigger" value="True"/>
    <param name="delay" value="0"/>
  </node>-->

</launch>


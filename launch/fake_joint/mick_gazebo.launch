<?xml version="1.0"?>
<launch>
<arg name="paused" default="false" doc="Starts Gazebo in paused mode" />
	<arg name="gui" default="true" doc="Starts Gazebo gui" />
	<arg name="world_path" default="$(find mick_description)/worlds" />
	<arg name="world_name" default="world24" />
	<arg name="gazebo_model_name" default="robot" doc="The name to give to the model in Gazebo (after spawning it)." />
	<arg name="robot_description_param_name" default="robot_description" doc="Name of the parameter which contains the robot description (ie: URDF) which should be spawned into Gazebo." />
	<param name="robot_description" command="$(find xacro)/xacro '$(find mick_description)/urdf/mick_robot.urdf.xacro'" />

	<!-- robot_state_publisher configuration -->
	<arg name="tf_prefix" default="" doc="tf_prefix used for the robot."/>
	<arg name="tf_pub_rate" default="500" doc="Rate at which robot_state_publisher should publish transforms."/>

<!--
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
    args="
      -urdf
      -param $(arg robot_description_param_name)
      -model $(arg gazebo_model_name)"
    output="screen" respawn="false" /> -->

  <!-- startup simulated world 
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" default="$(arg world_path)/$(arg world_name).world"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="gui" value="$(arg gui)"/>
	</include> -->

  <node name="fake_joint_driver" pkg="fake_joint_driver" type="fake_joint_driver_node"/>


  <!-- Spawn the model loaded earlier in the simulation just started -->
  <!-- <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model"
    args="
      -urdf
      -param $(arg robot_description_param_name)
      -model $(arg gazebo_model_name)"
    output="screen" respawn="false" /> -->
    
	<!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

 <arg name="controller_config_file" default="$(find mick_description)/config/gazebo_controllers.yaml" doc="Config file used for defining the ROS-Control controllers."/>
  <rosparam file="$(arg controller_config_file)" command="load"/>
  <arg name="stopped_controllers" default="head_controller other_controller" doc="Controllers that are initally loaded, but not started."/>
  

  <!-- Load other controllers, but do not start them -->
  <node name="ros_control_stopped_spawner" pkg="controller_manager" type="spawner"
    args="--stopped $(arg stopped_controllers)" output="screen" respawn="false" />
    <arg name="controllers" default="joint_state_controller" doc="Controllers that are activated by default."/>
    <!-- Load and start the controllers listed in the 'controllers' arg. -->
  <node name="ros_control_controller_spawner" pkg="controller_manager" type="controller_manager"
    args="spawn $(arg controllers)" output="screen" respawn="false"  />
  <!--
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find mick_description)/rviz/rviz.rviz"/>-->
		
</launch>
